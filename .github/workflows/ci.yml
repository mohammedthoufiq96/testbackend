name: CI/CD Pipeline with Test Analysis

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Run Jest Tests
        id: jest-tests
        run: |
          npm run test -- --json --outputFile=jest-results.json

      - name: Upload Jest Test Results
        uses: actions/upload-artifact@v4
        with:
          name: jest-test-results
          path: jest-results.json

  ai-analysis:
            needs: test
            runs-on: ubuntu-latest
        
            steps:
              - name: Download Jest Test Results
                uses: actions/download-artifact@v4
                with:
                  name: jest-test-results
        
              - name: List downloaded files
                run: find . -type f
        
              - name: Move jest-results.json to root
                run: mv jest-test-results/jest-results.json ./
        
              - name: Install jq
                run: sudo apt-get install -y jq
        
              - name: Validate jest-results.json exists
                run: |
                  if [ ! -f jest-results.json ]; then
                    echo "jest-results.json not found!"
                    exit 1
                  fi
        
              - name: Prepare and Send Test Results to AI
                run: |
                  PROMPT=$(jq -Rs '.' < jest-results.json)
                  echo '{
                    "model": "llama3.2:latest",
                    "prompt": "Analyze the following Jest test results and provide:\n- Summary of pass/fail\n- Possible reasons for failure\n- Suggestions to fix\n- Code improvement tips\n\nTest Results:\n'"$PROMPT"'",
                    "stream": false
                  }' > prompt.json
        
                  curl -s -X POST http://localhost:11434/api/generate \
                    -H "Content-Type: application/json" \
                    -d @prompt.json > ai-analysis-result.json
        
              - name: Output AI Analysis
                run: cat ai-analysis-result.json
        

  notify:
    needs: ai-analysis
    runs-on: ubuntu-latest

    steps:
      - name: Send Slack Notification for Test Results
        if: failure()
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text": "Test failed! Please check the CI pipeline for more details."}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}
